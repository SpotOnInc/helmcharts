{{- $root := . -}}
{{/* Definitions */}}
{{/* Block all Ingress and Egress traffic */}}
{{- define "deny-all" }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: "{{ include "common.fullname" . }}-deny-all"
  namespace: {{ .Release.Namespace }}
{{- with .Values.networkPolicy.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
  labels:
{{ include "common.labels.standard" . | indent 4 }}
spec:
  podSelector:
    matchLabels:
{{ include "common.labels.standard" . | indent 6 }}
  policyTypes:
  - Ingress
  - Egress
{{- end }}

{{/* End deny-all */}}
{{/* Allow DNS traffic */}}
{{- define "allow-dns" }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: "{{ include "common.fullname" . }}-allow-dns"
  namespace: {{ .Release.Namespace }}
{{- with .Values.networkPolicy.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
  labels:
{{ include "common.labels.standard" . | indent 4 }}
spec:
  podSelector:
    matchLabels:
{{ include "common.labels.standard" . | indent 6 }}
  policyTypes:
  - Egress
  egress:
  - to:
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
{{- end }}
{{/* End allow-dns */}}
{{/* Allow HTTP and HTTPS traffic */}}
{{- define "allow-http-https" }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: "{{ include "common.fullname" . }}-allow-tcp-443"
  namespace: {{ .Release.Namespace }}
{{- with .Values.networkPolicy.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
  labels:
{{ include "common.labels.standard" . | indent 4 }}
spec:
  podSelector:
    matchLabels:
{{ include "common.labels.standard" . | indent 6 }}
  policyTypes:
  - Egress
  egress:
  - to:
    ports:
    - protocol: TCP
      port: 443
        - protocol: TCP
          port: 80
{{- end }}
{{/* End allow-http-https */}}
{{/* Allow KOPS KIAM traffic */}}
{{- define "allow-kops-kiam" }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: "{{ include "common.fullname" . }}-allow-kiam"
  namespace: {{ .Release.Namespace }}
{{- with .Values.networkPolicy.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
  labels:
{{ include "common.labels.standard" . | indent 4 }}
spec:
  podSelector:
    matchLabels:
{{ include "common.labels.standard" . | indent 6 }}
  policyTypes:
  - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 169.254.169.254/32
      ports:
        - protocol: TCP
          port: 80
{{- end }}
{{/* End allow-kops-kiam */}}
{{/* Allow o11y traffic */}}
{{- define "allow-o11y" }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: "{{ include "common.fullname" . }}-allow-o11y"
  namespace: {{ .Release.Namespace }}
{{- with .Values.networkPolicy.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
  labels:
{{ include "common.labels.standard" . | indent 4 }}
spec:
  podSelector:
    matchLabels:
{{ include "common.labels.standard" . | indent 6 }}
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: o11y
          podSelector:
            matchLabels:
              app.kubernetes.io/instance: grafana-k8s-monitoring
{{- end }}
{{/* End allow-o11y */}}
{{/* End Definitions */}}

{{/* Start Template */}}
{{- if .Values.networkPolicy.enabled }}
{{/* denyALL set of policies */}}
{{- if .Values.networkPolicy.DenyALL.enabled }}
  {{- include "deny-all" . | nindent 0 }}
  {{- include "allow-dns" . | nindent 0 }}
  {{- include "allow-http-https" . | nindent 0 }}
  {{- include "allow-kops-kiam" . | nindent 0 }}
  {{- include "allow-o11y" . | nindent 0 }}
{{- end }}
{{/* End denyALL */}}
{{/* Allow o11y traffic with optional parameter */}}
{{- if .Values.networkPolicy.AllowO11y.enabled }}
  {{- include "allow-o11y" . | nindent 0 }}
{{- end }}
{{/* End AllowO11y */}}
{{/* Make a loop over all the INGRESS rules*/}}
{{- if .Values.networkPolicy.Ingress }}
{{- range $NetPolicy := .Values.networkPolicy.Ingress }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: "{{ include "common.fullname" $root }}-{{ $NetPolicy.name }}"
  namespace: {{ $root.Release.Namespace }}
  {{- with $root.Values.networkPolicy.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
  {{- end }}
  labels:
{{ include "common.labels.standard" $root | indent 4 }}
spec:
  podSelector:
    matchLabels:
{{ include "common.labels.standard" $root | indent 6 }}
  policyTypes:
  - Ingress
  ingress:
  - from:
  {{- range $NPSelector, $NPValue := $NetPolicy.selector }}
    {{- if eq $NPSelector "ipBlock" }}
    - ipBlock:
      {{- range $NetPolicy.selector.ipBlock }}
        cidr: {{ . }}
      {{- end }}
    {{- end }}

    {{- if eq $NPSelector "namespaceSelector" }}
      {{- range $key, $value := $NetPolicy.selector.namespaceSelector }}
    - namespaceSelector:
        matchLabels:
          {{ $key }}: {{ $value }}
      {{- end }}
    {{- end }}

    {{- if eq $NPSelector "podSelector" }}
      {{- range $key, $value := $NetPolicy.selector.podSelector }}
    - podSelector:
        matchLabels:
          {{ $key }}: {{ $value }}
      {{- end }}
    {{- end }}
  {{- end }}
  - ports:
    {{- range $NPports := $NetPolicy.ports }}
    - {{- $NPports | toYaml | nindent 6 -}}
    {{- end }}

{{- end }}
{{- end }}
{{/* End Ingress */}}

{{/* Make a loop over all the EGRESS rules*/}}
{{- if .Values.networkPolicy.Egress }}
{{- range $NetPolicy := .Values.networkPolicy.Egress }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: "{{ include "common.fullname" $root }}-{{ $NetPolicy.name }}"
  namespace: {{ $root.Release.Namespace }}
  {{- with $root.Values.networkPolicy.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
  {{- end }}
  labels:
{{ include "common.labels.standard" $root | indent 4 }}
spec:
  podSelector:
    matchLabels:
{{ include "common.labels.standard" $root | indent 6 }}
  policyTypes:
  - Egress
  egress:
  - to:
  {{- range $NPSelector, $NPValue := $NetPolicy.selector }}
    {{- if eq $NPSelector "ipBlock" }}
    - ipBlock:
      {{- range $NetPolicy.selector.ipBlock }}
        cidr: {{ . }}
      {{- end }}
    {{- end }}

    {{- if eq $NPSelector "namespaceSelector" }}
      {{- range $key, $value := $NetPolicy.selector.namespaceSelector }}
    - namespaceSelector:
        matchLabels:
          {{ $key }}: {{ $value }}
      {{- end }}
    {{- end }}

    {{- if eq $NPSelector "podSelector" }}
      {{- range $key, $value := $NetPolicy.selector.podSelector }}
    - podSelector:
        matchLabels:
          {{ $key }}: {{ $value }}
      {{- end }}
    {{- end }}
  {{- end }}
  - ports:
    {{- range $NPports := $NetPolicy.ports }}
    - {{- $NPports | toYaml | nindent 6 -}}
    {{- end }}

{{- end }}
{{- end }}
{{/* End Egress */}}

{{- end }}
{{/* End Template */}}

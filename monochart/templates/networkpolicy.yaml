{{- $root := . -}}
{{- if .Values.networkPolicy.enabled }}

{{- if .Values.networkPolicy.DenyALL.enabled }}
---
{{/* Block all traffic by default. */}}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: "{{ include "common.fullname" $root }}-deny-all"
  namespace: {{ $root.Release.Namespace }}
{{- with $root.Values.networkPolicy.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
  labels:
{{ include "common.labels.standard" $root | indent 4 }}
spec:
  podSelector:
    matchLabels:
{{ include "common.labels.standard" $root | indent 6 }}
  policyTypes:
    - Ingress
    - Egress

{{/* Allow DNS traffic by default. */}}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: "{{ include "common.fullname" $root }}-allow-dns"
  namespace: {{ $root.Release.Namespace }}
{{- with $root.Values.networkPolicy.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
  labels:
{{ include "common.labels.standard" $root | indent 4 }}
spec:
  podSelector:
    matchLabels:
{{ include "common.labels.standard" $root | indent 6 }}
  policyTypes:
    - Egress
  egress:
    - to:
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53

{{/* Allow TCP/443 traffic by default. */}}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: "{{ include "common.fullname" $root }}-allow-tcp-443"
  namespace: {{ $root.Release.Namespace }}
{{- with $root.Values.networkPolicy.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
  labels:
{{ include "common.labels.standard" $root | indent 4 }}
spec:
  podSelector:
    matchLabels:
{{ include "common.labels.standard" $root | indent 6 }}
  policyTypes:
    - Egress
  egress:
    - to:
      ports:
        - protocol: TCP
          port: 443

{{/* Allow KIAM traffic by default. */}}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: "{{ include "common.fullname" $root }}-allow-kiam"
  namespace: {{ $root.Release.Namespace }}
{{- with $root.Values.networkPolicy.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
  labels:
{{ include "common.labels.standard" $root | indent 4 }}
spec:
  podSelector:
    matchLabels:
{{ include "common.labels.standard" $root | indent 6 }}
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 169.254.169.254/32
      ports:
        - protocol: TCP
          port: 80
{{- if not .Values.networkPolicy.AllowO11y.enabled }}
{{/* Allow O11y traffic by default when DenyALL enabled */}}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: "{{ include "common.fullname" $root }}-allow-o11y"
  namespace: {{ $root.Release.Namespace }}
{{- with $root.Values.networkPolicy.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
  labels:
{{ include "common.labels.standard" $root | indent 4 }}
spec:
  podSelector:
    matchLabels:
{{ include "common.labels.standard" $root | indent 6 }}
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: o11y
          podSelector:
            matchLabels:
              app.kubernetes.io/instance: grafana-k8s-monitoring
{{- end }}
{{/* End AllowO11y DenyALL */}}
{{/* End DenyALL */}}
{{- end }}

{{- if .Values.networkPolicy.AllowO11y.enabled }}
{{/* Allow O11y traffic with optional parameter */}}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: "{{ include "common.fullname" $root }}-allow-o11y"
  namespace: {{ $root.Release.Namespace }}
{{- with $root.Values.networkPolicy.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
  labels:
{{ include "common.labels.standard" $root | indent 4 }}
spec:
  podSelector:
    matchLabels:
{{ include "common.labels.standard" $root | indent 6 }}
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: o11y
          podSelector:
            matchLabels:
              app.kubernetes.io/instance: grafana-k8s-monitoring
{{- end }}
{{/* End AllowO11y */}}
{{/* Make a loop over all the INGRESS rules*/}}
{{- if .Values.networkPolicy.Ingress }}
{{- range $NetPolicy := .Values.networkPolicy.Ingress }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: "{{ include "common.fullname" $root }}-{{ $NetPolicy.name }}"
  namespace: {{ $root.Release.Namespace }}
  {{- with $root.Values.networkPolicy.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
  {{- end }}
  labels:
{{ include "common.labels.standard" $root | indent 4 }}
spec:
  podSelector:
    matchLabels:
{{ include "common.labels.standard" $root | indent 6 }}
  policyTypes:
    - Ingress
  ingress:
    - from:
    {{- range $NPSelector, $NPValue := $NetPolicy.selector }}
      {{- if eq $NPSelector "ipBlock" }}
      {{ if not (eq $NetPolicy.selector.operator "And") -}}-{{ end }} ipBlock:
        {{- range $NetPolicy.selector.ipBlock }}
          cidr: {{ . }}
        {{- end }}
      {{- end }}

    {{- if eq $NPSelector "namespaceSelector" }}
      {{- range $key, $value := $NetPolicy.selector.namespaceSelector }}
      {{ if not (eq $NetPolicy.selector.operator "And") -}}-{{- end }} namespaceSelector:
          matchLabels:
            {{ $key }}: {{ $value }}
        {{- end }}
    {{- end }}

    {{- if eq $NPSelector "podSelector" }}
      {{- range $key, $value := $NetPolicy.selector.podSelector }}
      {{ if not (eq $NetPolicy.selector.operator "And") -}}-{{- end }} podSelector:
          matchLabels:
            {{ $key }}: {{ $value }}
        {{- end }}
    {{- end }}
  {{- end }}
      {{- with $NetPolicy.ports }}
      ports:
        {{- $NetPolicy.ports | toYaml | nindent 8 }}
      {{- end }}

{{/* End Ingress */}}
{{- end }}
{{- end }}


{{/* Make a loop over all the EGRESS rules*/}}
{{- if .Values.networkPolicy.Egress }}
{{- range $NetPolicy := .Values.networkPolicy.Egress }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: "{{ include "common.fullname" $root }}-{{ $NetPolicy.name }}"
  namespace: {{ $root.Release.Namespace }}
  {{- with $root.Values.networkPolicy.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
  {{- end }}
  labels:
{{ include "common.labels.standard" $root | indent 4 }}
spec:
  podSelector:
    matchLabels:
{{ include "common.labels.standard" $root | indent 6 }}
  policyTypes:
    - Egress
  egress:
    - to:
    {{- range $NPSelector, $NPValue := $NetPolicy.selector }}
      {{- if eq $NPSelector "ipBlock" }}
      {{ if not (eq $NetPolicy.selector.operator "And") -}}-{{- end }} ipBlock:
        {{- range $NetPolicy.selector.ipBlock }}
          cidr: {{ . }}
        {{- end }}
      {{- end }}

      {{- if eq $NPSelector "namespaceSelector" }}
        {{- range $key, $value := $NetPolicy.selector.namespaceSelector }}
      {{ if not (eq $NetPolicy.selector.operator "And") -}}-{{- end }} namespaceSelector:
          matchLabels:
            {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}

      {{- if eq $NPSelector "podSelector" }}
        {{- range $key, $value := $NetPolicy.selector.podSelector }}
      {{ if not (eq $NetPolicy.selector.operator "And") -}}-{{- end }} podSelector:
          matchLabels:
            {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
  {{- end }}
      {{- with $NetPolicy.ports }}
      ports:
        {{- $NetPolicy.ports | toYaml | nindent 8 }}
      {{- end }}

{{/* End Egress */}}
{{- end }}
{{- end }}

{{/* End Template */}}
{{- end }}

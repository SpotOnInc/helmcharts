{{- if .Values.deployment.enabled }}
apiVersion: apps/v1
kind: Deployment

metadata:
  name: {{ include "common.fullname" .  }}
  namespace: {{ .Release.Namespace }}
{{- with .Values.deployment.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
  labels:
{{- include "common.labels.standard" . | nindent 4 }}
{{- with .Values.deployment.labels }}
{{ toYaml .| indent 4 }}
{{- end }}
    # https://github.com/vhs-spoton/personal-doc/blob/main/networkpolices.md
    {{- if .Values.networkPolicy.enabled }}
    spoton.NetPolicy: enabled
        {{- if .Values.networkPolicy.DenyALL.enabled }}
    spoton.NetPolicy.DenyALL: enabled
        {{- else }}
    spoton.NetPolicy.DenyALL: disabled
        {{- end }}
    {{- else }}
    spoton.NetPolicy: disabled
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "common.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
{{- with .Values.deployment.strategy }}
  strategy:
{{ toYaml . | indent 4 }}
{{- end }}
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  template:
    metadata:
      name: {{ include "common.fullname" . }}
      annotations:
        # https://helm.sh/docs/howto/charts_tips_and_tricks/#automatically-roll-deployments
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
{{- if .Values.deployment.pod}}
{{- with .Values.deployment.pod.annotations }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- end }}

      labels:
{{- include "common.labels.standard" . | nindent 8 }}
        serve: "true"
{{- if .Values.deployment.pod}}
{{- with .Values.deployment.pod.labels }}
{{ toYaml .| indent 8 }}
{{- end }}
{{- end }}


    spec:
      serviceAccountName: {{ template "monochart.serviceAccountName" . }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}


      {{- if .Values.initcontainers.enabled }}
      initContainers:
{{ tpl .Values.initcontainers.FirstInitContainer . | indent 6 }}
        {{ include "monochart.env" . | indent 8 }}
        {{- if .Values.initcontainers.extraInitContainer }}
{{ tpl .Values.initcontainers.extraInitContainer . | indent 6 }}
        {{ include "monochart.env" . | indent 8 }}
        {{- end }}

        {{- if .Values.FirstVolumeMounts }}
        volumeMounts:
{{ tpl .Values.FirstVolumeMounts . | indent 8 }}
        {{- if .Values.extraVolumeMounts }}
{{ tpl .Values.extraVolumeMounts . | indent 8 }}
        {{- end }}
        {{- end }}

        {{- if .Values.initContainer.resources }}
        resources:
{{ toYaml .Values.initContainer.resources | indent 10 }}
        {{- end }}

        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
        {{- end }}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | indent 8 }}
        {{- end }}
        {{- if .Values.tolerations }}
        tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
        {{- end }}
      {{- end }}


      containers:
      - name: {{ .Release.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}

{{ include "monochart.env" . | indent 8 }}
{{- with .Values.deployment.pod.command }}
        command:
{{ toYaml . | indent 10 }}
{{- end }}
{{- with .Values.deployment.pod.args }}
        args:
{{ toYaml . | indent 10 }}
{{- end }}
{{- with .Values.deployment.securityContext }}
        securityContext:
{{ toYaml . | indent 10 }}
{{- end }}
        ports:
{{- range $name, $port := .Values.service.ports }}
{{- if $port }}
          - name: {{ $name }}
            containerPort: {{ $port.internal }}
            protocol: {{ default "TCP" $port.protocol  }}
{{- end }}
{{- end }}

        volumeMounts:
        {{- if .Values.FirstVolumeMounts }}
{{ tpl .Values.FirstVolumeMounts . | indent 8 }}
        {{- if .Values.extraVolumeMounts }}
{{ tpl .Values.extraVolumeMounts . | indent 8 }}
        {{- end }}
        {{- end }}
        {{- include "monochart.files.volumeMounts" . |  nindent 8 }}

        {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        {{- end }}

        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
        {{- end }}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | indent 8 }}
        {{- end }}
        {{- if .Values.tolerations }}
        tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
        {{- end }}


        {{- with .Values.probes }}
{{ toYaml . | indent 8 }}
        {{- end }}
        {{- if .Values.deployment.pod.lifecycle }}
        lifecycle:
{{ toYaml .Values.deployment.pod.lifecycle | indent 10 }}
        {{- end }}
{{- with .Values.deployment.pod.hostAliases }}
      hostAliases:
{{ toYaml . | indent 8 }}
{{- end }}
      imagePullSecrets:
{{- if .Values.dockercfg.enabled }}
        - name: {{ include "common.fullname" . }}
{{- end }}
{{- with .Values.image.pullSecrets }}
      {{- range . }}
        - name: {{ . }}
      {{- end }}
{{- end }}
      volumes:
        {{- if .Values.VolumeMountsConfig }}
{{ tpl .Values.VolumeMountsConfig . | indent 8 }}
        {{- end }}
      {{- if .Values.persistence.enabled }}
      - name: storage
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "common.fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- end }}
      {{- include "monochart.files.volumes" . | nindent 6 }}
{{- end -}}
